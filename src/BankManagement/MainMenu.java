package BankManagement;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL
 */
public class MainMenu extends javax.swing.JFrame {

    private Bank bank;
    private String saveLocation= null;
    private Customer customer;
    public MainMenu() {
         initComponents();
         setLocationRelativeTo(null);
         bank = new Bank();
         customer=null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        contentPanel = new javax.swing.JPanel();
        AddAccountButton = new javax.swing.JButton();
        RemoveAccountButton = new javax.swing.JButton();
        DepositeButton = new javax.swing.JButton();
        WithdrowButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        accountTable = new javax.swing.JTable();
        MenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        SaveMenuItem = new javax.swing.JMenuItem();
        SaveAs = new javax.swing.JMenuItem();
        OpenItem = new javax.swing.JMenuItem();
        exitMunuItem = new javax.swing.JMenuItem();
        ExitToMain = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bank   Application");

        AddAccountButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddAccountButton.setForeground(new java.awt.Color(204, 0, 0));
        AddAccountButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\BankManagementSystem\\Images\\addtobank.png")); // NOI18N
        AddAccountButton.setText("Add Account");
        AddAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAccountButtonActionPerformed(evt);
            }
        });

        RemoveAccountButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        RemoveAccountButton.setForeground(new java.awt.Color(204, 0, 0));
        RemoveAccountButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\BankManagementSystem\\Images\\rmvpng.png")); // NOI18N
        RemoveAccountButton.setText("Remove Account");
        RemoveAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                none(evt);
            }
        });

        DepositeButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DepositeButton.setForeground(new java.awt.Color(204, 0, 0));
        DepositeButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\BankManagementSystem\\Images\\depo.png")); // NOI18N
        DepositeButton.setText("Deposite");
        DepositeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepositeButtonActionPerformed(evt);
            }
        });

        WithdrowButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        WithdrowButton.setForeground(new java.awt.Color(204, 0, 0));
        WithdrowButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL\\Documents\\NetBeansProjects\\BankManagementSystem\\Images\\w.jpg")); // NOI18N
        WithdrowButton.setText("Withdrow");
        WithdrowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WithdrowButtonActionPerformed(evt);
            }
        });

        accountTable.setAutoCreateRowSorter(true);
        accountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Account Number", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        accountTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        accountTable.getTableHeader().setReorderingAllowed(false);
        accountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accountTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(accountTable);
        if (accountTable.getColumnModel().getColumnCount() > 0) {
            accountTable.getColumnModel().getColumn(0).setResizable(false);
            accountTable.getColumnModel().getColumn(1).setResizable(false);
            accountTable.getColumnModel().getColumn(2).setResizable(false);
            accountTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentPanelLayout.createSequentialGroup()
                        .addComponent(AddAccountButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DepositeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WithdrowButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(contentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DepositeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AddAccountButton)
                        .addComponent(RemoveAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(WithdrowButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        fileMenu.setText("File");

        SaveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        SaveMenuItem.setText("Save");
        SaveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(SaveMenuItem);

        SaveAs.setText("Save As..");
        SaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsActionPerformed(evt);
            }
        });
        fileMenu.add(SaveAs);

        OpenItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        OpenItem.setText("Open");
        OpenItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenItemActionPerformed(evt);
            }
        });
        fileMenu.add(OpenItem);

        exitMunuItem.setText("Exit");
        exitMunuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMunuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMunuItem);

        MenuBar.add(fileMenu);

        ExitToMain.setText("Back");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Back");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        ExitToMain.add(jMenuItem1);

        MenuBar.add(ExitToMain);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAccountButtonActionPerformed
    AddAccountMenu menu =new AddAccountMenu(this,true,bank); 
     menu.setVisible(true);
     if(menu.getCustomer()!=null){
      addCustomerToTable(menu.getCustomer());
     }
    }//GEN-LAST:event_AddAccountButtonActionPerformed
  
    private void addCustomerToTable(Customer customer)
    {
    DefaultTableModel model= (DefaultTableModel) accountTable.getModel();
     model.addRow(new Object[]{});
     reloadCustomerRowData(model.getRowCount() -1, customer);

    }
    
    private void removeCustomerFromTable(int row){
        DefaultTableModel model= (DefaultTableModel) accountTable.getModel();
        model.removeRow(row);
        
    }
     private void reloadCustomerRowData(int selectedRow, Customer customer) {
	 DefaultTableModel model= (DefaultTableModel) accountTable.getModel();
	 model.setValueAt(customer.getFirstName(), selectedRow, 0);
	 model.setValueAt(customer.getLastName(), selectedRow, 1);
	 model.setValueAt(customer.getAccount().getAccountNumber(), selectedRow, 2);
	 model.setValueAt(customer.getAccount().getBalance(), selectedRow, 3);
    }
    
    private void reloadTable()
    {
    
    for(Customer c: bank.getCustomers())
    {
    addCustomerToTable(c);
    }
    
    }
       
    private Customer getSelectedCustomer(int selectedRow)
    {
    Customer customer=null;
    if(selectedRow>=0)
    {
    int accountNumber=(int) accountTable.getValueAt(selectedRow, 2);
     customer= bank.getCustomerByAccoountNumber(accountNumber);
    }      
    return customer;
    }
    private void exitMunuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMunuItemActionPerformed
      this.dispose();
    }//GEN-LAST:event_exitMunuItemActionPerformed

    private void DepositeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepositeButtonActionPerformed
               
	int selectedRow=accountTable.getSelectedRow();
       Customer customer=getSelectedCustomer(selectedRow);
        if(customer!=null)
	{
	DepositeMenu menu = new DepositeMenu(this,true,customer);
	menu.setVisible(true);
	reloadCustomerRowData(selectedRow,customer);
	}
	
    }//GEN-LAST:event_DepositeButtonActionPerformed

    private void WithdrowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WithdrowButtonActionPerformed
        int selectedRow=accountTable.getSelectedRow();
       Customer customer=getSelectedCustomer(selectedRow);
        if(customer!=null)
	{
	WithdrowMenu menu = new WithdrowMenu(this,true,customer);
	menu.setVisible(true);
	reloadCustomerRowData(selectedRow,customer);
	}
    }//GEN-LAST:event_WithdrowButtonActionPerformed

    private void none(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_none
        int selectedRow = accountTable.getSelectedRow();
        if(selectedRow>=0){
            Customer customer= getSelectedCustomer(selectedRow);
            if(customer!=null){
                bank.removeCustomer(customer);
                removeCustomerFromTable(selectedRow);
            }
    }//GEN-LAST:event_none
  }
    private void accountTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountTableMouseClicked
     if(evt.getClickCount()==2)
        {
         int selectedRow=accountTable.getSelectedRow();
       Customer customer=getSelectedCustomer(selectedRow);
        if(customer!=null)
	{
	AccountDetailsPage adp = new AccountDetailsPage(this,true,customer);
	adp.setVisible(true);
	reloadCustomerRowData(selectedRow,customer);
	} 
       
        } 
    }//GEN-LAST:event_accountTableMouseClicked

    private void SaveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveMenuItemActionPerformed
      if(saveLocation!=null)
      {
      saveFile(saveLocation);
      
      }
      else{ SaveAsActionPerformed(evt); }
        
    }//GEN-LAST:event_SaveMenuItemActionPerformed

    private void OpenItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenItemActionPerformed
       JFileChooser chooser = new JFileChooser();
      chooser.setFileFilter(new bofFilter());
      chooser.setAcceptAllFileFilterUsed(false);
     int result = chooser.showOpenDialog(this);
     if(result == JFileChooser.APPROVE_OPTION){
	 
	 if(!chooser.getSelectedFile().toString().toLowerCase().endsWith(".bof"))
	 {
	     JOptionPane.showMessageDialog(this, "Unsupported File Type Selected","Unsupported file",JOptionPane.ERROR_MESSAGE);
	 }
	 else
	 {
	     try {
		 FileInputStream fIn =new FileInputStream(chooser.getSelectedFile());
		 ObjectInputStream objIn = new ObjectInputStream(fIn);
		 Object bankData = objIn.readObject();
		 if(bankData instanceof Bank)
		 {
		 bank = (Bank)bankData;
		 reloadTable();
		 }
		 saveLocation=chooser.getSelectedFile().toString();
	     } catch (FileNotFoundException ex) {
		 Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
	     } catch (IOException ex) {
		 Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
	     } catch (ClassNotFoundException ex) {
		 Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
	     }
	 }
	 
     }
    }//GEN-LAST:event_OpenItemActionPerformed

    private void SaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAsActionPerformed
    JFileChooser chooser = new JFileChooser();
      chooser.setFileFilter(new bofFilter());
      chooser.setAcceptAllFileFilterUsed(false);
     int result = chooser.showSaveDialog(this);
     if(result == JFileChooser.APPROVE_OPTION){
         File file =chooser.getSelectedFile();
	 String fileName= file.toString();
	 if(!fileName.toLowerCase().endsWith(".bof"))
	 {
	 fileName +=".bof";
	 }
	   boolean saved=saveFile(fileName);
	   if(saved){
	      saveLocation = fileName;
      }
     }
    }//GEN-LAST:event_SaveAsActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        dispose();
	Login lg = new Login();
       lg.setVisible(true);
       lg.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
 private boolean saveFile(String fileName) {
     try{
 
  FileOutputStream fOut =new  FileOutputStream(fileName);
	      ObjectOutputStream objout = new ObjectOutputStream(fOut);
	      objout.writeObject(bank);
	      objout.close();
	      fOut.close();
	      return true;
     }
             catch (FileNotFoundException ex) {
	     return false;
	  } catch (IOException ex) {
	     return false; 
	  }
 }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddAccountButton;
    private javax.swing.JButton DepositeButton;
    private javax.swing.JMenu ExitToMain;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem OpenItem;
    private javax.swing.JButton RemoveAccountButton;
    private javax.swing.JMenuItem SaveAs;
    private javax.swing.JMenuItem SaveMenuItem;
    private javax.swing.JButton WithdrowButton;
    private javax.swing.JTable accountTable;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JMenuItem exitMunuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

  
}


